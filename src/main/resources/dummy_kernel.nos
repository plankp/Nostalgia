;;
;; This is what happens when you do not load a proper kernel! It's a kernel
;; that tells you to load an actual kernel!
;;
;; Jokes aside, this is for the assembler to work in a non-miserable way. The
;; idea is that you provide the kernel assembler code when you run this virtual
;; machine, and if an error happens, you'd be able to see it on the screen
;; (because of this file)
;;

    .ORG    0x4000

    .SET    VIDMEM, 0x2000

    OR.R    %R1, %R0, %R0
    OR.R    %R3, %R0, %R0
PRINT_LOOP:
    LD.B    %R2, 0x4200, %R1    ; load char
    JREL.Z  %R2, -4             ; that was the last character, so hang
    MOV.I   %R4, 0x0A           ; handle line feed character ('\n')
    SUB.R   %R4, %R4, %R2
    JABS.Z  %R4, PRINT_NEWLINE, %R0
PRINT_CHAR:
    ST.B    %R2, VIDMEM, %R3    ; print char
    ADD.I   %R3, 2              ; increment vidmem offset
    JABS.Z  %R0, POST_INC, %R0
PRINT_NEWLINE:
    MOV.I   %R4, 160            ; 80 * 2
    IDIV    %R3, %R0, %R3, %R4
    ADD.I   %R3, 1
    IMUL    %R0, %R3, %R3, %R4
POST_INC:
    ADD.I   %R1, 1              ; increment string offset
    JABS.Z  %R0, PRINT_LOOP, %R0; ready to print next char
